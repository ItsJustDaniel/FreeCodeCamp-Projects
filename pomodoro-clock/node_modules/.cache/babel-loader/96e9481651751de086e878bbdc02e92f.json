{"ast":null,"code":"var _jsxFileName = \"/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/pomodoro-clock/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport BreakLength from \"./Components/Break Length\";\nimport SessionLength from \"./Components/Session Length\";\nimport Timer from \"./Components/Timer\";\nimport TimerControl from \"./Components/Timer Control\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      BreakLength: 5,\n      SessionLength: 25,\n      Timer: 1500,\n      TimerLabel: \"Session\",\n      is_playing: false,\n      intervalId: \"\",\n      is_Session_Length: true\n    };\n\n    this.onBreakIncrement = () => {\n      this.setState({\n        BreakLength: this.state.BreakLength + 1\n      });\n    };\n\n    this.onBreakDecrement = () => {\n      this.setState({\n        BreakLength: this.state.BreakLength - 1\n      });\n    };\n\n    this.onSessionIncrement = () => {\n      this.setState({\n        SessionLength: this.state.SessionLength + 1,\n        Timer: this.state.Timer + 60\n      });\n    };\n\n    this.onSessionDecrement = () => {\n      if (this.state.SessionLength > 1) {\n        this.setState({\n          SessionLength: this.state.SessionLength - 1,\n          Timer: this.state.Timer - 60\n        });\n      }\n    };\n\n    this.play = () => {\n      console.log(\"hi\");\n      this.setState(state => {\n        const is_playing = state.is_playing;\n        return {\n          is_playing: !is_playing\n        };\n      }, () => {\n        console.log(this.state.is_playing);\n\n        if (this.state.is_playing) {\n          this.setState({\n            intervalId: setInterval(this.countDown, 1000)\n          });\n        } else {\n          clearInterval(this.state.intervalId);\n        }\n      });\n    };\n\n    this.countDown = () => {\n      let x = document.getElementById(\"beep\");\n\n      if (this.state.Timer > 0) {\n        this.setState({\n          Timer: this.state.Timer - 1\n        }, () => {\n          console.log(this.state.Timer);\n        });\n      }\n\n      if (this.state.Timer <= 0) {\n        x.play();\n\n        if (this.state.is_Session_Length) {\n          this.setState({\n            Timer: this.state.BreakLength * 60,\n            TimerLabel: \"Break\",\n            is_Session_Length: !this.state.is_Session_Length\n          });\n        } else {\n          this.setState({\n            Timer: this.state.SessionLength * 60,\n            TimerLabel: \"Session\",\n            is_Session_Length: !this.state.is_Session_Length\n          });\n        }\n\n        if (x.currentTime >= 2) {\n          x.pause();\n          x.currentTime = 0;\n        }\n      }\n    };\n\n    this.reset = () => {\n      clearInterval(this.state.intervalId);\n      let x = document.getElementById(\"beep\");\n      x.pause();\n      x.currentTime = 0;\n      this.setState({\n        BreakLength: 5,\n        SessionLength: 25,\n        Timer: 1500,\n        TimerLabel: \"Session\",\n        is_playing: false,\n        intervalId: \"\",\n        is_Session_Length: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"root-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pomodoro-clock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Pomodoro Clock\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"length-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreakLength, {\n      onBreakIncrement: this.onBreakIncrement,\n      onBreakDecrement: this.onBreakDecrement,\n      BreakLength: this.state.BreakLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SessionLength, {\n      onSessionIncrement: this.onSessionIncrement,\n      onSessionDecrement: this.onSessionDecrement,\n      SessionLength: this.state.SessionLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Timer, {\n      SessionLength: this.state.SessionLength,\n      BreakLength: this.state.BreakLength,\n      Timer: this.state.Timer,\n      TimerLabel: this.state.TimerLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TimerControl, {\n      play: this.play,\n      reset: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/pomodoro-clock/src/App.js"],"names":["React","BreakLength","SessionLength","Timer","TimerControl","App","Component","state","TimerLabel","is_playing","intervalId","is_Session_Length","onBreakIncrement","setState","onBreakDecrement","onSessionIncrement","onSessionDecrement","play","console","log","setInterval","countDown","clearInterval","x","document","getElementById","currentTime","pause","reset","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport BreakLength from \"./Components/Break Length\";\nimport SessionLength from \"./Components/Session Length\";\nimport Timer from \"./Components/Timer\";\nimport TimerControl from \"./Components/Timer Control\";\n\nclass App extends React.Component {\n  //parts of a pomodoro-clock\n  // The buttons to change the break length and Session length and their labels\n  // a component to display the timer-label and the time-left\n  // a button to start, stop and reset timer\n  state = {\n    BreakLength: 5,\n    SessionLength: 25,\n    Timer: 1500,\n    TimerLabel: \"Session\",\n    is_playing: false,\n    intervalId: \"\",\n    is_Session_Length: true,\n  };\n\n  onBreakIncrement = () => {\n    this.setState({ BreakLength: this.state.BreakLength + 1 });\n  };\n\n  onBreakDecrement = () => {\n    this.setState({ BreakLength: this.state.BreakLength - 1 });\n  };\n\n  onSessionIncrement = () => {\n    this.setState({\n      SessionLength: this.state.SessionLength + 1,\n      Timer: this.state.Timer + 60,\n    });\n  };\n\n  onSessionDecrement = () => {\n    if (this.state.SessionLength > 1) {\n      this.setState({\n        SessionLength: this.state.SessionLength - 1,\n        Timer: this.state.Timer - 60,\n      });\n    }\n  };\n\n  play = () => {\n    console.log(\"hi\");\n    this.setState(\n      (state) => {\n        const is_playing = state.is_playing;\n        return {\n          is_playing: !is_playing,\n        };\n      },\n      () => {\n        console.log(this.state.is_playing);\n        if (this.state.is_playing) {\n          this.setState({ intervalId: setInterval(this.countDown, 1000) });\n        } else {\n          clearInterval(this.state.intervalId);\n        }\n      }\n    );\n  };\n\n  countDown = () => {\n    let x = document.getElementById(\"beep\");\n    if (this.state.Timer > 0) {\n      this.setState({ Timer: this.state.Timer - 1 }, () => {\n        console.log(this.state.Timer);\n      });\n    }\n    if (this.state.Timer <= 0) {\n      x.play();\n      if (this.state.is_Session_Length) {\n        this.setState({\n          Timer: this.state.BreakLength * 60,\n          TimerLabel: \"Break\",\n          is_Session_Length: !this.state.is_Session_Length,\n        });\n      } else {\n        this.setState({\n          Timer: this.state.SessionLength * 60,\n          TimerLabel: \"Session\",\n          is_Session_Length: !this.state.is_Session_Length,\n        });\n      }\n      if (x.currentTime >= 2) {\n        x.pause();\n        x.currentTime = 0;\n      }\n    }\n  };\n\n  reset = () => {\n    clearInterval(this.state.intervalId);\n\n    let x = document.getElementById(\"beep\");\n    x.pause();\n    x.currentTime = 0;\n\n    this.setState({\n      BreakLength: 5,\n      SessionLength: 25,\n      Timer: 1500,\n      TimerLabel: \"Session\",\n      is_playing: false,\n      intervalId: \"\",\n      is_Session_Length: true,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"root-container\">\n        <div id=\"pomodoro-clock\">\n          <h1>Pomodoro Clock</h1>\n          <div id=\"length-container\">\n            <BreakLength\n              onBreakIncrement={this.onBreakIncrement}\n              onBreakDecrement={this.onBreakDecrement}\n              BreakLength={this.state.BreakLength}\n            />\n            <SessionLength\n              onSessionIncrement={this.onSessionIncrement}\n              onSessionDecrement={this.onSessionDecrement}\n              SessionLength={this.state.SessionLength}\n            />\n          </div>\n\n          <Timer\n            SessionLength={this.state.SessionLength}\n            BreakLength={this.state.BreakLength}\n            Timer={this.state.Timer}\n            TimerLabel={this.state.TimerLabel}\n          />\n\n          <TimerControl play={this.play} reset={this.reset} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}