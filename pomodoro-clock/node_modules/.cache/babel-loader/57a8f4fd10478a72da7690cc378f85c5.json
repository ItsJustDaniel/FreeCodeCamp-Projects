{"ast":null,"code":"var _jsxFileName = \"/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/pomodoro-clock/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport BreakLength from \"./Components/Break Length\";\nimport SessionLength from \"./Components/Session Length\";\nimport Timer from \"./Components/Timer\";\nimport TimerControl from \"./Components/Timer Control\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      BreakLength: 5,\n      SessionLength: 25,\n      Timer: 1500,\n      is_playing: false,\n      intervalId: \"\"\n    };\n\n    this.onBreakIncrement = () => {\n      this.setState({\n        BreakLength: this.state.BreakLength + 1\n      });\n    };\n\n    this.onBreakDecrement = () => {\n      this.setState({\n        BreakLength: this.state.BreakLength - 1\n      });\n    };\n\n    this.onSessionIncrement = () => {\n      this.setState({\n        SessionLength: this.state.SessionLength + 1,\n        Timer: this.state.Timer + 60\n      });\n    };\n\n    this.onSessionDecrement = () => {\n      this.setState({\n        SessionLength: this.state.SessionLength - 1,\n        Timer: this.state.Timer - 60\n      });\n    };\n\n    this.play = () => {\n      this.setState(state => {\n        const is_playing = state.is_playing;\n        return {\n          is_playing: !is_playing\n        };\n      }, () => {\n        if (this.state.is_playing === true && this.state.timer > 0) {\n          setInterval(this.countDown, 1000);\n        } else {\n          clearInterval(this.intervalId);\n        }\n      });\n    };\n\n    this.countDown = () => {\n      while (this.state.timer > 0) {\n        this.setState({\n          Timer: this.state.Timer - 1\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"root-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pomodoro-clock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Pomodoro Clock\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"length-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BreakLength, {\n      onBreakIncrement: this.onBreakIncrement,\n      onBreakDecrement: this.onBreakDecrement,\n      BreakLength: this.state.BreakLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SessionLength, {\n      onSessionIncrement: this.onSessionIncrement,\n      onSessionDecrement: this.onSessionDecrement,\n      SessionLength: this.state.SessionLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Timer, {\n      SessionLength: this.state.SessionLength,\n      BreakLength: this.state.BreakLength,\n      Timer: this.state.Timer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TimerControl, {\n      play: this.play,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/pomodoro-clock/src/App.js"],"names":["React","BreakLength","SessionLength","Timer","TimerControl","App","Component","state","is_playing","intervalId","onBreakIncrement","setState","onBreakDecrement","onSessionIncrement","onSessionDecrement","play","timer","setInterval","countDown","clearInterval","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport BreakLength from \"./Components/Break Length\";\nimport SessionLength from \"./Components/Session Length\";\nimport Timer from \"./Components/Timer\";\nimport TimerControl from \"./Components/Timer Control\";\n\nclass App extends React.Component {\n  //parts of a pomodoro-clock\n  // The buttons to change the break length and Session length and their labels\n  // a component to display the timer-label and the time-left\n  // a button to start, stop and reset timer\n  state = {\n    BreakLength: 5,\n    SessionLength: 25,\n    Timer: 1500,\n    is_playing: false,\n    intervalId: \"\"\n  };\n\n  onBreakIncrement = () => {\n    this.setState({ BreakLength: this.state.BreakLength + 1 });\n  };\n\n  onBreakDecrement = () => {\n    this.setState({ BreakLength: this.state.BreakLength - 1 });\n  };\n\n  onSessionIncrement = () => {\n    this.setState({\n      SessionLength: this.state.SessionLength + 1,\n      Timer: this.state.Timer + 60\n    });\n  };\n\n  onSessionDecrement = () => {\n    this.setState({\n      SessionLength: this.state.SessionLength - 1,\n      Timer: this.state.Timer - 60\n    });\n  };\n\n  play = () => {\n    this.setState(\n      state => {\n        const is_playing = state.is_playing;\n        return {\n          is_playing: !is_playing\n        };\n      },\n      () => {\n        if (this.state.is_playing === true && this.state.timer > 0) {\n          setInterval(this.countDown, 1000);\n        } else {\n          clearInterval(this.intervalId);\n        }\n      }\n    );\n  };\n\n  countDown = () => {\n    while (this.state.timer > 0) {\n      this.setState({ Timer: this.state.Timer - 1 });\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"root-container\">\n        <div id=\"pomodoro-clock\">\n          <h1>Pomodoro Clock</h1>\n          <div id=\"length-container\">\n            <BreakLength\n              onBreakIncrement={this.onBreakIncrement}\n              onBreakDecrement={this.onBreakDecrement}\n              BreakLength={this.state.BreakLength}\n            />\n            <SessionLength\n              onSessionIncrement={this.onSessionIncrement}\n              onSessionDecrement={this.onSessionDecrement}\n              SessionLength={this.state.SessionLength}\n            />\n          </div>\n\n          <Timer\n            SessionLength={this.state.SessionLength}\n            BreakLength={this.state.BreakLength}\n            Timer={this.state.Timer}\n          />\n\n          <TimerControl play={this.play} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}