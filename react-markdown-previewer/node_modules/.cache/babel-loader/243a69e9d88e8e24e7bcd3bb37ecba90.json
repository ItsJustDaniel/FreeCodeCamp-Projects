{"ast":null,"code":"var _jsxFileName = \"/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/react-markdown-previewer/src/App.js\";\nimport React from \"react\";\nimport marked from \"marked\";\nimport \"./App.css\";\nconst initialMarkdown = `\n### Header\n\n# Header 1\n## Header 2\n### Header 3\n\n[freecodecamp](\"https://www.freecodecamp.com\")\n\n![Image](\"https://cdn.pixabay.com/photo/2013/07/13/10/48/check-157822_960_720.png\")\n\n## text decorations\n\n*itallics*\n\n**bold**\n\n***italics and bolded***\n\n### BlockQuotes\n\n> does this work\n\n### Code\n\n\\`console.log('hello world!')\\`\n\n\n\\`\\`\\`\nfunction(){\n  console.log(\"hello world\")\n}\n\n\\`\\`\\`\n\n1. list\n`;\nmarked.setOptions({\n  breaks: true\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      markdown: initialMarkdown\n    };\n  }\n\n  handleChange(i) {\n    this.setState({\n      markdown: i.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"markDown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"editor\",\n      value: this.state.markdown,\n      onChange: i => this.handleChange(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"preview\",\n      dangerouslySetInnerHTML: {\n        __html: marked(this.state.markdown)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/react-markdown-previewer/src/App.js"],"names":["React","marked","initialMarkdown","setOptions","breaks","App","Component","constructor","props","state","content","markdown","handleChange","i","setState","target","value","render","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,WAAP;AACA,MAAMC,eAAe,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzB;AAsCAD,MAAM,CAACE,UAAP,CAAkB;AAChBC,EAAAA,MAAM,EAAE;AADQ,CAAlB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAET;AAFC,KAAb;AAID;;AACDU,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AACZH,MAAAA,QAAQ,EAAEE,CAAC,CAACE,MAAF,CAASC;AADP,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,QAFpB;AAGE,MAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAQE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,uBAAuB,EAAE;AAAEK,QAAAA,MAAM,EAAEjB,MAAM,CAAC,KAAKQ,KAAL,CAAWE,QAAZ;AAAhB,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAeD;;AA9B+B;;AAiClC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport marked from \"marked\";\nimport \"./App.css\";\nconst initialMarkdown = `\n### Header\n\n# Header 1\n## Header 2\n### Header 3\n\n[freecodecamp](\"https://www.freecodecamp.com\")\n\n![Image](\"https://cdn.pixabay.com/photo/2013/07/13/10/48/check-157822_960_720.png\")\n\n## text decorations\n\n*itallics*\n\n**bold**\n\n***italics and bolded***\n\n### BlockQuotes\n\n> does this work\n\n### Code\n\n\\`console.log('hello world!')\\`\n\n\n\\`\\`\\`\nfunction(){\n  console.log(\"hello world\")\n}\n\n\\`\\`\\`\n\n1. list\n`;\n\nmarked.setOptions({\n  breaks: true\n});\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      markdown: initialMarkdown\n    };\n  }\n  handleChange(i) {\n    this.setState({\n      markdown: i.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div id=\"markDown\">\n        <div>\n          <textarea\n            id=\"editor\"\n            value={this.state.markdown}\n            onChange={i => this.handleChange(i)}\n          ></textarea>\n        </div>\n        <div\n          id=\"preview\"\n          dangerouslySetInnerHTML={{ __html: marked(this.state.markdown) }}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}