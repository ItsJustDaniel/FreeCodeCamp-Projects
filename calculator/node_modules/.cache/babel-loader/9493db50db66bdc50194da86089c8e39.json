{"ast":null,"code":"var _jsxFileName = \"/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/calculator/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./components/buttons\";\nimport Display from \"./components/display\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: \"0\",\n      inputArr: [],\n      buttonId: [\"clear\", \"divide\", \"multiply\", \"nine\", \"eight\", \"seven\", \"subtract\", \"six\", \"five\", \"four\", \"add\", \"three\", \"two\", \"one\", \"equals\", \"zero\", \"decimal\"],\n      buttonValue: [\"AC\", \" / \", \" x \", \"9\", \"8\", \"7\", \" - \", \"6\", \"5\", \"4\", \" + \", \"3\", \"2\", \"1\", \"=\", \"0\", \".\"]\n    };\n\n    this.onButtonClick = e => {\n      const regex = /([.]{2,})|(?<=[.]\\d+)[.]{1,}/g;\n      const input = this.state.input;\n      const inputArr = this.state.inputArr;\n      const value = e.target.value;\n\n      if (this.state.input === \"0\") {\n        this.setState({\n          input: value\n        });\n      } else if (regex.test(input + value)) {\n        console.log(\"hello\");\n      } else {\n        this.setState({\n          input: input + value,\n          inputArr: inputArr.concat(value)\n        }, () => {\n          console.log(inputArr);\n        });\n      }\n\n      if (value === \"=\") {\n        this.setState({\n          input: String(eval(input)),\n          inputArr: [String(eval(input))]\n        });\n      } else if (e.target.value === \" x \") {\n        this.setState({\n          input: input + \" * \",\n          inputArr: this.state.inputArr.concat(\" * \")\n        });\n      } else if (e.target.value === \"AC\") {\n        this.setState({\n          input: \"0\",\n          inputArr: []\n        });\n      } else if ((inputArr[inputArr.length - 1] === \" + \" || inputArr[inputArr.length - 1] === \" - \" || inputArr[inputArr.length - 1] === \" / \" || inputArr[inputArr.length - 1] === \" * \") && (value === \" + \" || value === \" / \" || value === \" * \")) {\n        this.setState({\n          input: input.split(\"\").filter(i => {\n            console.log(i);\n            return i !== \" + \" || i !== \" - \" || i !== \" * \" || i !== \" / \";\n          }).join(\"\").concat(value)\n        });\n      }\n    };\n  }\n\n  render() {\n    const input = this.state.input;\n    const buttonId = this.state.buttonId.slice();\n    const buttonValue = this.state.buttonValue.slice();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      id: \"root-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"calculator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Display, {\n      input: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Buttons, {\n      value: buttonValue,\n      id: buttonId,\n      onButtonClick: this.onButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aliceli/Desktop/Programming/Projects/FreeCodeCamp Projects/calculator/src/App.js"],"names":["React","Buttons","Display","App","Component","state","input","inputArr","buttonId","buttonValue","onButtonClick","e","regex","value","target","setState","test","console","log","concat","String","eval","length","split","filter","i","join","render","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,CACR,OADQ,EAER,QAFQ,EAGR,UAHQ,EAIR,MAJQ,EAKR,OALQ,EAMR,OANQ,EAOR,UAPQ,EAQR,KARQ,EASR,MATQ,EAUR,MAVQ,EAWR,KAXQ,EAYR,OAZQ,EAaR,KAbQ,EAcR,KAdQ,EAeR,QAfQ,EAgBR,MAhBQ,EAiBR,SAjBQ,CAHJ;AAsBNC,MAAAA,WAAW,EAAE,CACX,IADW,EAEX,KAFW,EAGX,KAHW,EAIX,GAJW,EAKX,GALW,EAMX,GANW,EAOX,KAPW,EAQX,GARW,EASX,GATW,EAUX,GAVW,EAWX,KAXW,EAYX,GAZW,EAaX,GAbW,EAcX,GAdW,EAeX,GAfW,EAgBX,GAhBW,EAiBX,GAjBW;AAtBP,KADwB;;AAAA,SA2ChCC,aA3CgC,GA2CfC,CAAD,IAAO;AACrB,YAAMC,KAAK,GAAG,+BAAd;AACA,YAAMN,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,YAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;AACA,YAAMM,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;;AAEA,UAAI,KAAKR,KAAL,CAAWC,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,aAAKS,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEO;AAAT,SAAd;AACD,OAFD,MAEO,IAAID,KAAK,CAACI,IAAN,CAAWV,KAAK,GAAGO,KAAnB,CAAJ,EAA+B;AACpCI,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAFM,MAEA;AACL,aAAKH,QAAL,CACE;AACET,UAAAA,KAAK,EAAEA,KAAK,GAAGO,KADjB;AAEEN,UAAAA,QAAQ,EAAEA,QAAQ,CAACY,MAAT,CAAgBN,KAAhB;AAFZ,SADF,EAKE,MAAM;AACJI,UAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,SAPH;AASD;;AAED,UAAIM,KAAK,KAAK,GAAd,EAAmB;AACjB,aAAKE,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEc,MAAM,CAACC,IAAI,CAACf,KAAD,CAAL,CADD;AAEZC,UAAAA,QAAQ,EAAE,CAACa,MAAM,CAACC,IAAI,CAACf,KAAD,CAAL,CAAP;AAFE,SAAd;AAID,OALD,MAKO,IAAIK,CAAC,CAACG,MAAF,CAASD,KAAT,KAAmB,KAAvB,EAA8B;AACnC,aAAKE,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEA,KAAK,GAAG,KADH;AAEZC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBY,MAApB,CAA2B,KAA3B;AAFE,SAAd;AAID,OALM,MAKA,IAAIR,CAAC,CAACG,MAAF,CAASD,KAAT,KAAmB,IAAvB,EAA6B;AAClC,aAAKE,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,QAAQ,EAAE;AAAxB,SAAd;AACD,OAFM,MAEA,IACL,CAACA,QAAQ,CAACA,QAAQ,CAACe,MAAT,GAAkB,CAAnB,CAAR,KAAkC,KAAlC,IACCf,QAAQ,CAACA,QAAQ,CAACe,MAAT,GAAkB,CAAnB,CAAR,KAAkC,KADnC,IAECf,QAAQ,CAACA,QAAQ,CAACe,MAAT,GAAkB,CAAnB,CAAR,KAAkC,KAFnC,IAGCf,QAAQ,CAACA,QAAQ,CAACe,MAAT,GAAkB,CAAnB,CAAR,KAAkC,KAHpC,MAICT,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,KAA7B,IAAsCA,KAAK,KAAK,KAJjD,CADK,EAML;AACA,aAAKE,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEA,KAAK,CACTiB,KADI,CACE,EADF,EAEJC,MAFI,CAEIC,CAAD,IAAO;AACbR,YAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACA,mBAAOA,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAArB,IAA8BA,CAAC,KAAK,KAApC,IAA6CA,CAAC,KAAK,KAA1D;AACD,WALI,EAMJC,IANI,CAMC,EAND,EAOJP,MAPI,CAOGN,KAPH;AADK,SAAd;AAUD;AACF,KA/F+B;AAAA;;AAgGhCc,EAAAA,MAAM,GAAG;AACP,UAAMrB,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACA,UAAME,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,CAAoBoB,KAApB,EAAjB;AACA,UAAMnB,WAAW,GAAG,KAAKJ,KAAL,CAAWI,WAAX,CAAuBmB,KAAvB,EAApB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEtB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAEG,WADT;AAEE,MAAA,EAAE,EAAED,QAFN;AAGE,MAAA,aAAa,EAAE,KAAKE,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAYD;;AAjH+B;;AAoHlC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Buttons from \"./components/buttons\";\nimport Display from \"./components/display\";\n\nclass App extends React.Component {\n  state = {\n    input: \"0\",\n    inputArr: [],\n    buttonId: [\n      \"clear\",\n      \"divide\",\n      \"multiply\",\n      \"nine\",\n      \"eight\",\n      \"seven\",\n      \"subtract\",\n      \"six\",\n      \"five\",\n      \"four\",\n      \"add\",\n      \"three\",\n      \"two\",\n      \"one\",\n      \"equals\",\n      \"zero\",\n      \"decimal\",\n    ],\n    buttonValue: [\n      \"AC\",\n      \" / \",\n      \" x \",\n      \"9\",\n      \"8\",\n      \"7\",\n      \" - \",\n      \"6\",\n      \"5\",\n      \"4\",\n      \" + \",\n      \"3\",\n      \"2\",\n      \"1\",\n      \"=\",\n      \"0\",\n      \".\",\n    ],\n  };\n  onButtonClick = (e) => {\n    const regex = /([.]{2,})|(?<=[.]\\d+)[.]{1,}/g;\n    const input = this.state.input;\n    const inputArr = this.state.inputArr;\n    const value = e.target.value;\n\n    if (this.state.input === \"0\") {\n      this.setState({ input: value });\n    } else if (regex.test(input + value)) {\n      console.log(\"hello\");\n    } else {\n      this.setState(\n        {\n          input: input + value,\n          inputArr: inputArr.concat(value),\n        },\n        () => {\n          console.log(inputArr);\n        }\n      );\n    }\n\n    if (value === \"=\") {\n      this.setState({\n        input: String(eval(input)),\n        inputArr: [String(eval(input))],\n      });\n    } else if (e.target.value === \" x \") {\n      this.setState({\n        input: input + \" * \",\n        inputArr: this.state.inputArr.concat(\" * \"),\n      });\n    } else if (e.target.value === \"AC\") {\n      this.setState({ input: \"0\", inputArr: [] });\n    } else if (\n      (inputArr[inputArr.length - 1] === \" + \" ||\n        inputArr[inputArr.length - 1] === \" - \" ||\n        inputArr[inputArr.length - 1] === \" / \" ||\n        inputArr[inputArr.length - 1] === \" * \") &&\n      (value === \" + \" || value === \" / \" || value === \" * \")\n    ) {\n      this.setState({\n        input: input\n          .split(\"\")\n          .filter((i) => {\n            console.log(i);\n            return i !== \" + \" || i !== \" - \" || i !== \" * \" || i !== \" / \";\n          })\n          .join(\"\")\n          .concat(value),\n      });\n    }\n  };\n  render() {\n    const input = this.state.input;\n    const buttonId = this.state.buttonId.slice();\n    const buttonValue = this.state.buttonValue.slice();\n\n    return (\n      <div className=\"App\" id=\"root-container\">\n        <div id=\"calculator\">\n          <Display input={input} />\n          <Buttons\n            value={buttonValue}\n            id={buttonId}\n            onButtonClick={this.onButtonClick}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}